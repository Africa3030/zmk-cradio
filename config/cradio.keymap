// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>

/ {
    behaviors {
        hm: homerow_mod {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <175>; // triggers the hold behavior when the tapping-term-ms has expired
            quick-tap-ms = <150>; // If you press a tapped hold-tap again within quick-tap-ms milliseconds of the first press, it will always trigger the tap behavior.
            require-prior-idle-ms = <185>; // like quick-tap-ms however it will apply for any non-modifier key pressed before it
            bindings = <&kp>, <&kp>;  // hold, tap
        };
    
        td_rp: td_right_paren {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp D>, <&kp RIGHT_PARENTHESIS>;
        };

        
        td_vt: td_v_tab {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp V>, <&kp TAB>;
        };

        td_rbc: td_right_brace {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp B>, <&kp RIGHT_BRACE>;
        };

        
        td_rbck: td_right_bracket {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;
        };

                      
        td_rgt: td_right_greater_than {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp K>, <&kp GREATER_THAN>;
        };

        td_cursor: td_scroll_or_cursor {
            compatible = "zmk,behavior-tap-dance";
            #binding-cells = <0>;
            bindings = <&kp TAB>, <&mkp RCLK>; // hold, tap, double_tap
        };

    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
// 0
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ Q        │  W ESC   │  F       │  P       │  G       │   │  J       │  L       │  U       │  Y       │  ;:      │
    &mt LC(LS(LALT)) Q &hm ESC W  &kp F      &kp P     &kp G           &kp J      &kp L      &kp U      &kp Y      &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  R       │  T       │  D       │   │  M       │  N       │  E       │  I       │ O        │
            &kp A     &hm LALT S &hm LCTRL R &hm LGUI T  &td_rp        &td_rbck  &hm LGUI N &hm LCTRL E &hm LALT I &hm RSHFT O 
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  K       │  H       │ , <      │ . >      │ / ?      │
          &mt LSHFT Z  &kp X      &kp C      &td_vt     &td_rbc        &td_rgt    &kp H    &kp COMMA   &kp DOT   &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                            &td_cursor &lt 1 SPACE    &lt 2 ENTER &lt 3 BSPC 
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        right_layer {
            bindings = <
// 1
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│   CAPS   │   +      │          │          │          │   │          │  7       │  8       │  9       │          │
            &kp CAPS &kp C_VOL_UP  &none      &none   &kp C_BRI_UP    &kp SLASH  &hm F7 N7  &hm F8 N8  &hm F9 N9  &hm F10 MINUS
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │   -      │          │          │          │   │          │  4       │  5       │  6       │          │
          &kp LG(Z)  &kp C_VOL_DN  &none &kp BACKSPACE &kp C_BRI_DN   &kp ASTRK  &hm F4 N4  &hm F5 N5  &hm F6 N6  &hm F11 PLUS
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │  0       │  1       │  2       │  3       │          │
           &kp C_MUTE &kp LG(X)  &kp LG(C)  &kp LG(V)   &kp TAB       &kp N0     &hm F1 N1  &hm F2 N2  &hm F3 N3  &hm F12 EQUAL
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans        &kp DOT    &kp COMMA
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;

        };

        left_layer {
            bindings = <
// 2
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │          │          │          │          │   │          │          │          │          │          │
            &trans     &trans     &trans      &trans     &trans        &trans     &trans     &trans     &trans    &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │  DOWN    │ RARW     │          │          │          │
            &trans     &trans     &trans      &trans     &trans       &kp DARW   &kp RARW    &trans     &trans     &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │  UP      │ LARW     │          │          │          │
            &trans     &trans     &trans      &trans     &trans       &kp UARW   &kp LARW     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
// 3
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  `       │    '     │    "     │    $     │          │   │          │    %     │    ^     │    &     │    *     │
           &kp GRAVE   &kp APOS  &kp DQT     &kp DLLR    &trans        &trans     &kp PRCNT  &kp CARET   &kp AMPS  &kp ASTRK  
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│   ~      │   !      │  @       │    #     │    (     │   │    [     │     │    │    -     │    =     │     ?    │
           &kp TILDE   &kp EXCL   &kp AT     &kp HASH   &kp LPAR      &kp LBKT    &kp PIPE   &kp MINUS &kp EQUAL  &kp QMARK    
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │   {      │   │    <     │          │    _     │    +     │    \     │
            &trans     &trans     &trans     &trans     &kp LBRC    &kp LS(COMMA)  &trans    &kp UNDER   &kp PLUS  &kp BSLH  
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };


        four_layer {
            bindings = <
// 4
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│   ~      │   !      │  @       │  #       │  $       │   │  %       │  ^       │  &       │  *       │          │
           &kp TILDE   &kp EXCL   &kp AT     &kp HASH   &kp DLLR      &kp PRCNT  &kp CARET   &kp AMPS  &kp ASTRK     &trans
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │  │       │  _       │  +       │  :       │  ?       │
            &trans     &trans     &trans  &kp LS(COMMA) &kp LS(DOT)  &kp PIPE    &kp UNDER  &kp PLUS  &kp COLON  &kp QMARK
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │          │          │          │          │          │
            &trans     &trans     &trans     &trans    &trans         &trans     &trans     &trans     &trans     &trans
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
